# Problem 8 : Largest product in a series

digitnumber = "731671765313306249192251196744265747423553491949349698352031277450632623957831801698"+"4801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329"+"52274430435576689664895044524452316173185640309871112172238311362229893423380308135336276614282806444486" +"64523874930358907296290491560440772390713810515859307960866701724271218839987979087922749219016997208880" +"93776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539" +"753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216" +"637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583" +"591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962" +"455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507" +"754100225698315520005593572972571636269561882670428252483600823257530420752963450"

def product(cdc):
	"""
	Given a string, including a number, this function calculates the value of digit's number product.
	"""
	nb = 1
	for elt in cdc:
		nb *= int(elt)
	return nb


def greastest_product(N,digitnumber = digitnumber):
	"""
	This function takes a string, digitnumber, including a number, and find in this string the number with N
	digits that has the greatest product. 
	"""
	greater = 1
	for i in range(1001-N):
		if product(digitnumber[i:i+N])>= greater:
			greater = product(digitnumber[i:i+N])
	return greater


print(greastest_product(13))


# Resultat 23514624000